{"ast":null,"code":"var _jsxFileName = \"/Users/leonor/Dev/recipes/pantry-app/src/pages/IngredientsPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/IngredientsPage.jsx\nimport React, { useMemo, useState } from \"react\";\nimport Chip from \"../components/Chip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IngredientsPage({\n  allIngredients,\n  ingredientCategoryMap,\n  selected,\n  toggle\n}) {\n  _s();\n  const [activeCat, setActiveCat] = useState(\"all\");\n  const categories = useMemo(() => {\n    const cats = new Set([\"all\"]);\n    allIngredients.forEach(name => {\n      const cat = ingredientCategoryMap.get(name) || \"other\";\n      cats.add(cat);\n    });\n    return Array.from(cats);\n  }, [allIngredients, ingredientCategoryMap]);\n  const visible = useMemo(() => {\n    if (activeCat === \"all\") return allIngredients;\n    return allIngredients.filter(name => (ingredientCategoryMap.get(name) || \"other\") === activeCat);\n  }, [allIngredients, activeCat, ingredientCategoryMap]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page__title\",\n      children: \"Your Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__hint\",\n      children: [\"Choose a category, then tap ingredients you have. Selected: \", selected.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chips\",\n      style: {\n        marginBottom: 12\n      },\n      children: categories.map(c => /*#__PURE__*/_jsxDEV(Chip, {\n        active: activeCat === c,\n        onClick: () => setActiveCat(c),\n        children: c\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chips\",\n      children: visible.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty\",\n        children: \"No ingredients in this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : visible.map(name => /*#__PURE__*/_jsxDEV(Chip, {\n        active: selected.has(name),\n        onClick: () => toggle(name),\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(IngredientsPage, \"vP1Cv0sqMdfCeOHqnhqUKUyfXHc=\");\n_c = IngredientsPage;\nvar _c;\n$RefreshReg$(_c, \"IngredientsPage\");","map":{"version":3,"names":["React","useMemo","useState","Chip","jsxDEV","_jsxDEV","IngredientsPage","allIngredients","ingredientCategoryMap","selected","toggle","_s","activeCat","setActiveCat","categories","cats","Set","forEach","name","cat","get","add","Array","from","visible","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","style","marginBottom","map","c","active","onClick","length","has","_c","$RefreshReg$"],"sources":["/Users/leonor/Dev/recipes/pantry-app/src/pages/IngredientsPage.jsx"],"sourcesContent":["// src/pages/IngredientsPage.jsx\nimport React, { useMemo, useState } from \"react\";\nimport Chip from \"../components/Chip\";\n\nexport default function IngredientsPage({\n  allIngredients,\n  ingredientCategoryMap,\n  selected,\n  toggle,\n}) {\n  const [activeCat, setActiveCat] = useState(\"all\");\n\n  const categories = useMemo(() => {\n    const cats = new Set([\"all\"]);\n    allIngredients.forEach((name) => {\n      const cat = ingredientCategoryMap.get(name) || \"other\";\n      cats.add(cat);\n    });\n    return Array.from(cats);\n  }, [allIngredients, ingredientCategoryMap]);\n\n  const visible = useMemo(() => {\n    if (activeCat === \"all\") return allIngredients;\n    return allIngredients.filter(\n      (name) => (ingredientCategoryMap.get(name) || \"other\") === activeCat\n    );\n  }, [allIngredients, activeCat, ingredientCategoryMap]);\n\n  return (\n    <div className=\"page\">\n      <h2 className=\"page__title\">Your Ingredients</h2>\n      <p className=\"page__hint\">\n        Choose a category, then tap ingredients you have. Selected: {selected.size}\n      </p>\n\n      <div className=\"chips\" style={{ marginBottom: 12 }}>\n        {categories.map((c) => (\n          <Chip key={c} active={activeCat === c} onClick={() => setActiveCat(c)}>\n            {c}\n          </Chip>\n        ))}\n      </div>\n\n      <div className=\"chips\">\n        {visible.length === 0 ? (\n          <span className=\"empty\">No ingredients in this category.</span>\n        ) : (\n          visible.map((name) => (\n            <Chip key={name} active={selected.has(name)} onClick={() => toggle(name)}>\n              {name}\n            </Chip>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}