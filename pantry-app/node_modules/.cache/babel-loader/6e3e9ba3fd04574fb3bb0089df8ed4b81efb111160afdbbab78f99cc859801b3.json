{"ast":null,"code":"// src/utils/csv.js\nexport function parseCSV(text) {\n  const lines = text.trim().split(/\\r?\\n/);\n  if (lines.length < 2) return [];\n  const header = lines[0].split(\",\").map(h => h.trim());\n  return lines.slice(1).map(line => {\n    const cells = line.split(\",\").map(c => c.trim());\n    const row = {};\n    header.forEach((h, i) => {\n      var _cells$i;\n      return row[h] = (_cells$i = cells[i]) !== null && _cells$i !== void 0 ? _cells$i : \"\";\n    });\n    // If it's a recipe row (title/category/time first), rest are ingredients\n    if (\"title\" in row && \"category\" in row && \"time\" in row) {\n      row.ingredients = cells.slice(3).map(c => c.trim()).filter(Boolean);\n    }\n    return row;\n  });\n}\nexport function normalizeName(name) {\n  return String(name || \"\").trim().toLowerCase();\n}","map":{"version":3,"names":["parseCSV","text","lines","trim","split","length","header","map","h","slice","line","cells","c","row","forEach","i","_cells$i","ingredients","filter","Boolean","normalizeName","name","String","toLowerCase"],"sources":["/Users/leonor/Dev/recipes/pantry-app/src/utils/csv.js"],"sourcesContent":["// src/utils/csv.js\nexport function parseCSV(text) {\n  const lines = text.trim().split(/\\r?\\n/);\n  if (lines.length < 2) return [];\n  const header = lines[0].split(\",\").map((h) => h.trim());\n  return lines.slice(1).map((line) => {\n    const cells = line.split(\",\").map((c) => c.trim());\n    const row = {};\n    header.forEach((h, i) => (row[h] = cells[i] ?? \"\"));\n    // If it's a recipe row (title/category/time first), rest are ingredients\n    if (\"title\" in row && \"category\" in row && \"time\" in row) {\n      row.ingredients = cells.slice(3).map((c) => c.trim()).filter(Boolean);\n    }\n    return row;\n  });\n}\n\nexport function normalizeName(name) {\n  return String(name || \"\").trim().toLowerCase();\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,QAAQA,CAACC,IAAI,EAAE;EAC7B,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC;EACxC,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE;EAC/B,MAAMC,MAAM,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;EACvD,OAAOD,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC,CAACF,GAAG,CAAEG,IAAI,IAAK;IAClC,MAAMC,KAAK,GAAGD,IAAI,CAACN,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAAEK,CAAC,IAAKA,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IAClD,MAAMU,GAAG,GAAG,CAAC,CAAC;IACdP,MAAM,CAACQ,OAAO,CAAC,CAACN,CAAC,EAAEO,CAAC;MAAA,IAAAC,QAAA;MAAA,OAAMH,GAAG,CAACL,CAAC,CAAC,IAAAQ,QAAA,GAAGL,KAAK,CAACI,CAAC,CAAC,cAAAC,QAAA,cAAAA,QAAA,GAAI,EAAE;IAAA,CAAC,CAAC;IACnD;IACA,IAAI,OAAO,IAAIH,GAAG,IAAI,UAAU,IAAIA,GAAG,IAAI,MAAM,IAAIA,GAAG,EAAE;MACxDA,GAAG,CAACI,WAAW,GAAGN,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC,CAACF,GAAG,CAAEK,CAAC,IAAKA,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,CAACe,MAAM,CAACC,OAAO,CAAC;IACvE;IACA,OAAON,GAAG;EACZ,CAAC,CAAC;AACJ;AAEA,OAAO,SAASO,aAAaA,CAACC,IAAI,EAAE;EAClC,OAAOC,MAAM,CAACD,IAAI,IAAI,EAAE,CAAC,CAAClB,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}